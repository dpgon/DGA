rule win_fobber_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.fobber."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fobber"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 55 89e5 ff750c ff7508 e8???????? 85c0 }
            // n = 6, score = 1100
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_1 = { 89e5 51 57 8b7d08 57 }
            // n = 5, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   57                   | push                edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   57                   | push                edi

        $sequence_2 = { 660fc146f9 6685c0 7515 0fb646f8 50 0fb746f6 }
            // n = 6, score = 1100
            //   660fc146f9           | xadd                word ptr [esi - 7], ax
            //   6685c0               | test                ax, ax
            //   7515                 | jne                 0x17
            //   0fb646f8             | movzx               eax, byte ptr [esi - 8]
            //   50                   | push                eax
            //   0fb746f6             | movzx               eax, word ptr [esi - 0xa]

        $sequence_3 = { 85c0 740f 89c1 8b450c }
            // n = 4, score = 1100
            //   85c0                 | test                eax, eax
            //   740f                 | je                  0x11
            //   89c1                 | mov                 ecx, eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_4 = { 89e5 ff750c 6800300000 ff7508 6a00 }
            // n = 5, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6800300000           | push                0x3000
            //   ff7508               | push                dword ptr [ebp + 8]
            //   6a00                 | push                0

        $sequence_5 = { 8b750c 8b4d10 39f7 760e 8d0431 39f8 7607 }
            // n = 7, score = 1100
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   39f7                 | cmp                 edi, esi
            //   760e                 | jbe                 0x10
            //   8d0431               | lea                 eax, dword ptr [ecx + esi]
            //   39f8                 | cmp                 eax, edi
            //   7607                 | jbe                 9

        $sequence_6 = { 7607 49 01cf 01ce 41 fd f3a4 }
            // n = 7, score = 1100
            //   7607                 | jbe                 9
            //   49                   | dec                 ecx
            //   01cf                 | add                 edi, ecx
            //   01ce                 | add                 esi, ecx
            //   41                   | inc                 ecx
            //   fd                   | std                 
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]

        $sequence_7 = { 8b4510 8b5508 8b4d0c 3002 c0c803 }
            // n = 5, score = 1100
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   3002                 | xor                 byte ptr [edx], al
            //   c0c803               | ror                 al, 3

        $sequence_8 = { be00010000 8a1401 8810 40 4e 75f7 }
            // n = 6, score = 100
            //   be00010000           | mov                 esi, 0x100
            //   8a1401               | mov                 dl, byte ptr [ecx + eax]
            //   8810                 | mov                 byte ptr [eax], dl
            //   40                   | inc                 eax
            //   4e                   | dec                 esi
            //   75f7                 | jne                 0xfffffff9

        $sequence_9 = { 75f3 3bfb 0f8498840100 33c0 }
            // n = 4, score = 100
            //   75f3                 | jne                 0xfffffff5
            //   3bfb                 | cmp                 edi, ebx
            //   0f8498840100         | je                  0x1849e
            //   33c0                 | xor                 eax, eax

        $sequence_10 = { 85c0 0f8517350100 3975fc 0f84e0000000 8b5714 }
            // n = 5, score = 100
            //   85c0                 | test                eax, eax
            //   0f8517350100         | jne                 0x1351d
            //   3975fc               | cmp                 dword ptr [ebp - 4], esi
            //   0f84e0000000         | je                  0xe6
            //   8b5714               | mov                 edx, dword ptr [edi + 0x14]

        $sequence_11 = { 6a01 8d45f8 50 683325bf72 }
            // n = 4, score = 100
            //   6a01                 | push                1
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   683325bf72           | push                0x72bf2533

        $sequence_12 = { 8945fc 8b4510 56 8b7508 85f6 745a 837d0c00 }
            // n = 7, score = 100
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   85f6                 | test                esi, esi
            //   745a                 | je                  0x5c
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0

        $sequence_13 = { d88b5d0883fb 0b7f4b 7415 8bc3 6a02 }
            // n = 5, score = 100
            //   d88b5d0883fb         | fmul                dword ptr [ebx - 0x47cf7a3]
            //   0b7f4b               | or                  edi, dword ptr [edi + 0x4b]
            //   7415                 | je                  0x17
            //   8bc3                 | mov                 eax, ebx
            //   6a02                 | push                2

        $sequence_14 = { 8b7d0c 83fffe 0f8480980100 81ff00080000 1bc9 f7d9 }
            // n = 6, score = 100
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   83fffe               | cmp                 edi, -2
            //   0f8480980100         | je                  0x19886
            //   81ff00080000         | cmp                 edi, 0x800
            //   1bc9                 | sbb                 ecx, ecx
            //   f7d9                 | neg                 ecx

        $sequence_15 = { 8bff 55 8bec 8b4d08 85c9 0f84ab190100 a1???????? }
            // n = 7, score = 100
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   85c9                 | test                ecx, ecx
            //   0f84ab190100         | je                  0x119b1
            //   a1????????           |                     

    condition:
        7 of them and filesize < 188416
}