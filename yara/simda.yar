rule win_simda_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.simda."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.simda"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 c745fc04010000 a4 e8???????? }
            // n = 4, score = 700
            //   50                   | push                eax
            //   c745fc04010000       | mov                 dword ptr [ebp - 4], 0x104
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   e8????????           |                     

        $sequence_1 = { 83c424 33c0 668945d0 8845fe }
            // n = 4, score = 700
            //   83c424               | add                 esp, 0x24
            //   33c0                 | xor                 eax, eax
            //   668945d0             | mov                 word ptr [ebp - 0x30], ax
            //   8845fe               | mov                 byte ptr [ebp - 2], al

        $sequence_2 = { c7049f00000000 75f6 8b0f 894d08 }
            // n = 4, score = 700
            //   c7049f00000000       | mov                 dword ptr [edi + ebx*4], 0
            //   75f6                 | jne                 0xfffffff8
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   894d08               | mov                 dword ptr [ebp + 8], ecx

        $sequence_3 = { 8b09 8b7508 8b16 57 53 50 51 }
            // n = 7, score = 700
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   57                   | push                edi
            //   53                   | push                ebx
            //   50                   | push                eax
            //   51                   | push                ecx

        $sequence_4 = { ff15???????? 85c0 740d f6450802 7507 57 }
            // n = 6, score = 700
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740d                 | je                  0xf
            //   f6450802             | test                byte ptr [ebp + 8], 2
            //   7507                 | jne                 9
            //   57                   | push                edi

        $sequence_5 = { 83c40c 803a00 0f8491000000 53 8bda }
            // n = 5, score = 700
            //   83c40c               | add                 esp, 0xc
            //   803a00               | cmp                 byte ptr [edx], 0
            //   0f8491000000         | je                  0x97
            //   53                   | push                ebx
            //   8bda                 | mov                 ebx, edx

        $sequence_6 = { 50 e8???????? 8b1d???????? 83c40c 57 6a08 ffd3 }
            // n = 7, score = 700
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b1d????????         |                     
            //   83c40c               | add                 esp, 0xc
            //   57                   | push                edi
            //   6a08                 | push                8
            //   ffd3                 | call                ebx

        $sequence_7 = { 8d85b1feffff 6a00 50 a4 c685b0feffff00 e8???????? 8b5508 }
            // n = 7, score = 700
            //   8d85b1feffff         | lea                 eax, dword ptr [ebp - 0x14f]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   c685b0feffff00       | mov                 byte ptr [ebp - 0x150], 0
            //   e8????????           |                     
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]

        $sequence_8 = { c1eb10 3bce 7601 4b c1ef10 2bdf 5f }
            // n = 7, score = 700
            //   c1eb10               | shr                 ebx, 0x10
            //   3bce                 | cmp                 ecx, esi
            //   7601                 | jbe                 3
            //   4b                   | dec                 ebx
            //   c1ef10               | shr                 edi, 0x10
            //   2bdf                 | sub                 ebx, edi
            //   5f                   | pop                 edi

        $sequence_9 = { 8bdf c1e310 03d3 83cbff 2bca }
            // n = 5, score = 700
            //   8bdf                 | mov                 ebx, edi
            //   c1e310               | shl                 ebx, 0x10
            //   03d3                 | add                 edx, ebx
            //   83cbff               | or                  ebx, 0xffffffff
            //   2bca                 | sub                 ecx, edx

    condition:
        7 of them and filesize < 1581056
}