rule win_tinba_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.tinba."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tinba"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b7508 ad 50 56 }
            // n = 4, score = 1100
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   ad                   | lodsd               eax, dword ptr [esi]
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_1 = { 8b4510 aa 8b450c ab }
            // n = 4, score = 1100
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_2 = { 6a00 6a00 ff750c 6a00 6a00 ff7508 }
            // n = 6, score = 1000
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_3 = { 8a241f 88240f 88041f 41 }
            // n = 4, score = 1000
            //   8a241f               | mov                 ah, byte ptr [edi + ebx]
            //   88240f               | mov                 byte ptr [edi + ecx], ah
            //   88041f               | mov                 byte ptr [edi + ebx], al
            //   41                   | inc                 ecx

        $sequence_4 = { 2b7d0c 57 ff750c 51 50 }
            // n = 5, score = 900
            //   2b7d0c               | sub                 edi, dword ptr [ebp + 0xc]
            //   57                   | push                edi
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   51                   | push                ecx
            //   50                   | push                eax

        $sequence_5 = { 886214 66894a15 eb5c 88c4 88c1 }
            // n = 5, score = 900
            //   886214               | mov                 byte ptr [edx + 0x14], ah
            //   66894a15             | mov                 word ptr [edx + 0x15], cx
            //   eb5c                 | jmp                 0x5e
            //   88c4                 | mov                 ah, al
            //   88c1                 | mov                 cl, al

        $sequence_6 = { f6c310 7514 807a0801 740e f6420108 7408 }
            // n = 6, score = 900
            //   f6c310               | test                bl, 0x10
            //   7514                 | jne                 0x16
            //   807a0801             | cmp                 byte ptr [edx + 8], 1
            //   740e                 | je                  0x10
            //   f6420108             | test                byte ptr [edx + 1], 8
            //   7408                 | je                  0xa

        $sequence_7 = { 66ab b855736572 ab b82d416765 }
            // n = 4, score = 900
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   b855736572           | mov                 eax, 0x72657355
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   b82d416765           | mov                 eax, 0x6567412d

        $sequence_8 = { 8908 290e 8b06 85c0 }
            // n = 4, score = 900
            //   8908                 | mov                 dword ptr [eax], ecx
            //   290e                 | sub                 dword ptr [esi], ecx
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   85c0                 | test                eax, eax

        $sequence_9 = { 83ef0e 85c0 741b 66b80d0a }
            // n = 4, score = 900
            //   83ef0e               | sub                 edi, 0xe
            //   85c0                 | test                eax, eax
            //   741b                 | je                  0x1d
            //   66b80d0a             | mov                 ax, 0xa0d

        $sequence_10 = { d7 93 80fbff 750e 814a3500000200 30db e9???????? }
            // n = 7, score = 900
            //   d7                   | xlatb               
            //   93                   | xchg                eax, ebx
            //   80fbff               | cmp                 bl, 0xff
            //   750e                 | jne                 0x10
            //   814a3500000200       | or                  dword ptr [edx + 0x35], 0x20000
            //   30db                 | xor                 bl, bl
            //   e9????????           |                     

        $sequence_11 = { 7506 8b4108 8b4014 85c0 7403 b073 aa }
            // n = 7, score = 900
            //   7506                 | jne                 8
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]
            //   8b4014               | mov                 eax, dword ptr [eax + 0x14]
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5
            //   b073                 | mov                 al, 0x73
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_12 = { 48 85c0 0f84b4000000 48 89fe }
            // n = 5, score = 900
            //   48                   | dec                 eax
            //   85c0                 | test                eax, eax
            //   0f84b4000000         | je                  0xba
            //   48                   | dec                 eax
            //   89fe                 | mov                 esi, edi

    condition:
        7 of them and filesize < 57344
}